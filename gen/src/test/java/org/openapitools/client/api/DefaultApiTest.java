/*
 * blog_ms API
 * blog_ms API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.MyPostResponseDto;
import org.openapitools.client.model.PostRequestDto;
import org.openapitools.client.model.PostResponseDto;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DefaultApi
 */
@Ignore
public class DefaultApiTest {

    private final DefaultApi api = new DefaultApi();

    
    /**
     * POST posts
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createPostTest() throws ApiException {
        PostRequestDto postRequestDto = null;
        String response = api.createPost(postRequestDto);

        // TODO: test validations
    }
    
    /**
     * DELETE posts/{postId}
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteMyPostTest() throws ApiException {
        Long postId = null;
        String response = api.deleteMyPost(postId);

        // TODO: test validations
    }
    
    /**
     * GET posts
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAllPostTest() throws ApiException {
        Integer page = null;
        Integer size = null;
        List<PostResponseDto> response = api.getAllPost(page, size);

        // TODO: test validations
    }
    
    /**
     * GET posts/my-post
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getMyPostTest() throws ApiException {
        Integer page = null;
        Integer size = null;
        List<MyPostResponseDto> response = api.getMyPost(page, size);

        // TODO: test validations
    }
    
    /**
     * GET posts/{postId}
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getPostByIdTest() throws ApiException {
        Long postId = null;
        PostResponseDto response = api.getPostById(postId);

        // TODO: test validations
    }
    
    /**
     * PUT posts/{postId}
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateMyPostTest() throws ApiException {
        Long postId = null;
        PostRequestDto postRequestDto = null;
        String response = api.updateMyPost(postId, postRequestDto);

        // TODO: test validations
    }
    
}
